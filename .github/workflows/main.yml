name: Continuous Integration and Delivery

on: 
  push:
    branches:
      - master

env:
  IMAGE: docker.pkg.github.com/$(echo $GITHUB_REPOSITORY | tr '[A-Z]' '[a-z]')/app

jobs:

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Checkout master
        uses: actions/checkout@v2.3.4
      - name: Log in to Github Packages
        run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin docker.pkg.github.com
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull image
        run: |
          docker pull ${{ env.IMAGE }}:latest || true
      - name: Build Image
        run: |
          docker build \
            --cache-from ${{ env.IMAGE }}:latest \
            --tag ${{ env.IMAGE }}:latest \
            --file ./project/Dockerfile.prod \
            "./project"
      - name: Push image
        run: |
          docker push ${{ env.IMAGE }}:latest
  
# Your workflow name.
  deploy:
    name: Deploy to heroku.

    # Run workflow on every push to master branch.
    on:
      push:
        branches: [master]

    # Your workflows jobs.
    jobs:
      build:
        runs-on: ubuntu-latest
        steps:
          # Check-out your repository.
          - name: Checkout
            uses: actions/checkout@v2


    ### ⬇ IMPORTANT PART ⬇ ###

          - name: Build, Push and Release a Docker container to Heroku. # Your custom step name
            uses: gonuit/heroku-docker-deploy@v1.3.3 # GitHub action name (leave it as it is).
            with:
              # Below you must provide variables for your Heroku app.

              # The email address associated with your Heroku account.
              # If you don't want to use repository secrets (which is recommended) you can do:
              # email: my.email@example.com
              email: ${{ secrets.HEROKU_EMAIL }}
              
              # Heroku API key associated with provided user's email.
              # Api Key is available under your Heroku account settings.
              heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
              
              # Name of the heroku application to which the build is to be sent.
              heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}

              # (Optional, default: "./")
              # Dockerfile directory.
              # For example, if you have a Dockerfile in the root of your project, leave it as follows:
              dockerfile_directory: ./project/Dockerfile.prod

              # (Optional, default: "Dockerfile")
              # Dockerfile name.
              dockerfile_name: Dockerfile.prod

              # (Optional, default: "")
              # Additional options of docker build command.
              docker_options: "--no-cache"

              # (Optional, default: "web")
              # Select the process type for which you want the docker container to be uploaded.
              # By default, this argument is set to "web".
              # For more information look at https://devcenter.heroku.com/articles/process-model
              process_type: web
              
      
              
    ### ⬆ IMPORTANT PART ⬆ ###